name: GCP root

on:
  workflow_call:
    inputs:
      kommando:
        required: true
        type: string
      bucket:
        required: true
        type: string
      releaseName:
        type: string
      naisfile:
        required: true
        type: string
      cluster:
        required: true
        type: string
      cdnEnv:
        required: true
        type: string
    secrets:
      GCS_SA_KEY:
        required: true
      SENTRY_AUTH_TOKEN:
        required: false
      NAIS_DEPLOY_APIKEY:
        required: true

env:
  IMAGE_TAG: ${{ github.sha }}
  IMAGE: ghcr.io/${{ github.repository }}/aktivitetsplan
jobs:
  deploy:
    name: Deploy application to dev
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'write'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm run test
      - name: Build application
        run: ${{ inputs.kommando }}
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v3
        name: Build poao-frontend with static files
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE }}:${{ env.IMAGE_TAG }}
      - name: Upload to CDN
        uses: navikt/frontend/actions/cdn-upload/v1@main
        with:
          cdn-environment: ${{ inputs.cdnEnv }}
          cdn-team-name: dab
          source: ./build/
          destination: '/aktivitetsplan/'
      - name: Deploy application
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: ${{ inputs.cluster }}
          RESOURCE: nais/${{ inputs.naisfile }}.yaml
          VAR: version=${{ env.IMAGE_TAG }}
          BUCKET: gs://${{ inputs.bucket }}
      - name: Create sentry release
        uses: getsentry/action-release@v1
        if: inputs.bucket == 'aktivitetsplan-prod'
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: nav
          SENTRY_PROJECT: aktivitetsplan
          SENTRY_URL: https://sentry.gc.nav.no/
        with:
          environment: prod
          sourcemaps: './build'
      #- name: Gcloud auth
      #  uses: google-github-actions/auth@v0
      #  with:
      #    credentials_json: '${{ secrets.GCS_SA_KEY }}'
      #- name: Setup gcloud
      #  uses: google-github-actions/setup-gcloud@v0
      #- name: Upload files to GCS
      #  run: gsutil -m rsync -r build "$BUCKET"
      #  env:
      #    BUCKET: gs://${{ inputs.bucket }}
